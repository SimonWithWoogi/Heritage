I"vI<h2 id="1-what-is-kakao-vision-api"><span style="color:darkblue">1. What is Kakao Vision API</span></h2>

<p><span style="color:darkblue"><code class="language-plaintext highlighter-rouge">1.1. Vision Api</code></span></p>

<p>카카오에서 제공하는  비전 API는 얼굴 검출, 상품 검출, 성인 이미지 판별, 썸네일 생성, 썸네일 검출, 멀티 태그 생성, OCR 7가지를 제공하고 있고 JSON 형식으로 결과가 많이 리턴되어 오고 있습니다.</p>

<p>디벨로퍼 사이트에서 보시면 아시겠지만 각 형식별로 리턴되어 오는 것들에 대한 의미는 참고해서 보시고 이번에도 C# 으로 했는데 해도해도 이미지 자체로 하는건 안되고 이미지URL로 올리는거만 되서 다음에 이미지 올려서 하는걸로 다시 올려보겠습니다</p>

<p>썸네일 생성과 썸네일 검출만 필요파라미터가 달라서 2개 4개 나눠서 구성했습니다.</p>

<p>그리고 OCR은 이미지URL를 지원하지 않아서 구현하지 못했습니다.</p>

<h2 id="2-얼굴검출-상품검출-성인이미지판별-멀티태그생성"><span style="color:darkblue">2. 얼굴검출, 상품검출, 성인이미지판별, 멀티태그생성</span></h2>

<p><span style="color:darkblue"><code class="language-plaintext highlighter-rouge">2.1. Code description</code></span></p>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
</pre></td> --><td class="rouge-code"><pre><span class="nf">kakak_API_vision_detect</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/face/detect"</span><span class="p">);</span> <span class="c1">// 얼굴검출</span>
<span class="nf">kakak_API_vision_detect</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/product/detect"</span><span class="p">);</span> <span class="c1">//상품검출</span>
<span class="nf">kakak_API_vision_detect</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/adult/detect"</span><span class="p">);</span><span class="c1">//성인이미지판별</span>
<span class="nf">kakak_API_vision_detect</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/multitag/generate"</span><span class="p">);</span>
<span class="c1">//멀티태그생성</span>

<span class="k">public</span> <span class="k">void</span> <span class="nf">kakak_API_vision_detect</span><span class="p">(</span><span class="kt">string</span> <span class="n">url</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">rest_api_key</span> <span class="p">=</span> <span class="s">"???"</span><span class="p">;</span> 
        <span class="c1">// 내 어플리케이션 =&gt; 어플선택 =&gt; 기본정보의 앱 키 &gt; REST Key 값 부여            </span>

        <span class="n">HttpWebRequest</span> <span class="n">request</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="n">url</span><span class="p">);</span> 
        <span class="c1">// 해당 URL로 네트웍을 만든다</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Authorization"</span><span class="p">,</span> <span class="s">"KakaoAK "</span> <span class="p">+</span> <span class="n">rest_api_key</span><span class="p">);</span> 
        <span class="c1">// 헤더에 옵션값을 추가한다.</span>
        <span class="n">request</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">"application/x-www-form-urlencoded"</span><span class="p">;</span><span class="c1">// 콘텐츠타입을 명시한다</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span> <span class="c1">// get 으로 보낼지 post로 보낼지 명시한다.</span>

        <span class="kt">string</span> <span class="n">sss</span> <span class="p">=</span> <span class="s">"image_url=https://t1.daumcdn.net/alvolo/_vision/openapi/r2/images/01.jpg"</span><span class="p">;</span> 
        <span class="c1">// 보낼 데이터를 xml 형식으로 만들어주고</span>
        <span class="kt">byte</span><span class="p">[]</span> <span class="n">byteDataParams</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">sss</span><span class="p">);</span> 
        <span class="c1">// 데이터를 UTF-8 형식의 바이트 배열로 변환시켜준다.</span>
        <span class="n">request</span><span class="p">.</span><span class="n">ContentLength</span> <span class="p">=</span> <span class="n">byteDataParams</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> 
        <span class="c1">// 보낼 데이터의 길이를 설정해준다.</span>

        <span class="k">using</span> <span class="p">(</span><span class="n">Stream</span> <span class="n">reqStream</span> <span class="p">=</span> <span class="n">request</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">())</span> 
            <span class="c1">// 네트웍을 열어서 데이터를 보낸다.</span>
        <span class="p">{</span>
            <span class="n">reqStream</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">byteDataParams</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">byteDataParams</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span> <span class="c1">// 데이터 쓰기</span>
        <span class="p">}</span>

        <span class="kt">string</span> <span class="n">responseText</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
        <span class="k">using</span> <span class="p">(</span><span class="n">HttpWebResponse</span> <span class="n">response</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">request</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">())</span> 
            <span class="c1">// 보낸데이터를 기반으로 받는다</span>
        <span class="p">{</span>
            <span class="n">Stream</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">();</span> <span class="c1">// 받은 데이터를 스트림으로 쓴다</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">StreamReader</span> <span class="n">sr</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">stream</span><span class="p">))</span> 
                <span class="c1">// 스트림을 읽기 위해 리더를 오픈한다.</span>
            <span class="p">{</span>
                <span class="n">responseText</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span> <span class="c1">// 스트림의 내용을 읽어서 문자열로 반환해준다.</span>
            <span class="p">}</span>

            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">responseText</span><span class="p">);</span> <span class="c1">// 내용을 로그로 출력한다.</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">MessageBox</span><span class="p">.</span><span class="nf">Show</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><span style="color:darkblue"><code class="language-plaintext highlighter-rouge">2.2. Result</code></span></p>

<p><img src="/assets/img/kakao/vision_1.png" alt="img" /></p>

<p>간단하게 form 에서 라디오버튼으로 구분하여 사진파일은 동일하게 되어 있고 url만 다르게 호출하게 되어 있고 마지막에 로그로 출력하게 하였습니다.</p>

<p>이게 얼굴검출에 대한 리턴데이터의 텍스트시각화도우미 캡처본입니다.</p>

<p><img src="/assets/img/kakao/vision_2.png" alt="img" /></p>

<p>나머지 상품검출, 성인 이미지 판별, 멀티태그생성도 비슷하게 오니 따로 붙이진 않겠습니다.</p>

<h2 id="3-썸네일생성-썸네일검출"><span style="color:darkblue">3. 썸네일생성, 썸네일검출</span></h2>

<p><span style="color:darkblue"><code class="language-plaintext highlighter-rouge">3.1. Code description</code></span></p>

<div class="language-c# highlighter-rouge"><div class="highlight"><pre class="highlight"><code><table class="rouge-table"><tbody><tr><!-- <td class="rouge-gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
</pre></td> --><td class="rouge-code"><pre><span class="c1">//썸네일생성</span>
<span class="nf">kakak_API_vision_thumbnail</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/thumbnail/crop"</span><span class="p">,</span> <span class="m">200</span><span class="p">,</span> <span class="m">200</span><span class="p">);</span>
<span class="c1">//썸네일 검출</span>
<span class="nf">kakak_API_vision_thumbnail</span><span class="p">(</span><span class="s">"https://dapi.kakao.com/v2/vision/thumbnail/detect"</span><span class="p">,</span> <span class="m">200</span><span class="p">,</span> <span class="m">200</span><span class="p">);</span>

<span class="k">public</span> <span class="k">void</span> <span class="nf">kakak_API_vision_thumbnail</span><span class="p">(</span><span class="kt">string</span> <span class="n">url</span><span class="p">,</span> <span class="kt">int</span> <span class="n">width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">height</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">try</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">rest_api_key</span> <span class="p">=</span> <span class="s">"???"</span><span class="p">;</span> <span class="c1">// 내 어플리케이션 =&gt; 어플선택 =&gt; 기본정보의 앱 키 &gt; REST Key 값 부여            </span>

        <span class="n">HttpWebRequest</span> <span class="n">request</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebRequest</span><span class="p">)</span><span class="n">WebRequest</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="n">url</span><span class="p">);</span> <span class="c1">// 해당 URL로 네트웍을 만든다</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"Authorization"</span><span class="p">,</span> <span class="s">"KakaoAK "</span> <span class="p">+</span> <span class="n">rest_api_key</span><span class="p">);</span> <span class="c1">// 헤더에 옵션값을 추가한다.</span>
        <span class="n">request</span><span class="p">.</span><span class="n">ContentType</span> <span class="p">=</span> <span class="s">"application/x-www-form-urlencoded"</span><span class="p">;</span><span class="c1">// 콘텐츠타입을 명시한다</span>
        <span class="n">request</span><span class="p">.</span><span class="n">Method</span> <span class="p">=</span> <span class="s">"POST"</span><span class="p">;</span> <span class="c1">// get 으로 보낼지 post로 보낼지 명시한다.</span>

        <span class="kt">string</span> <span class="n">sss</span> <span class="p">=</span> <span class="s">"image_url=https://t1.daumcdn.net/alvolo/_vision/openapi/r2/images/01.jpg&amp;width="</span> <span class="p">+</span> <span class="n">width</span> <span class="p">+</span> <span class="s">"&amp;height="</span> <span class="p">+</span> <span class="n">height</span><span class="p">;</span> <span class="c1">// 보낼 데이터를 xml 형식으로 만들어주고</span>
        <span class="kt">byte</span><span class="p">[]</span> <span class="n">byteDataParams</span> <span class="p">=</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">.</span><span class="nf">GetBytes</span><span class="p">(</span><span class="n">sss</span><span class="p">);</span> <span class="c1">// 데이터를 UTF-8 형식의 바이트 배열로 변환시켜준다.</span>
        <span class="n">request</span><span class="p">.</span><span class="n">ContentLength</span> <span class="p">=</span> <span class="n">byteDataParams</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="c1">// 보낼 데이터의 길이를 설정해준다.</span>

        <span class="k">using</span> <span class="p">(</span><span class="n">Stream</span> <span class="n">reqStream</span> <span class="p">=</span> <span class="n">request</span><span class="p">.</span><span class="nf">GetRequestStream</span><span class="p">())</span> <span class="c1">// 네트웍을 열어서 데이터를 보낸다.</span>
        <span class="p">{</span>
            <span class="n">reqStream</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">byteDataParams</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">byteDataParams</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span> <span class="c1">// 데이터 쓰기</span>
        <span class="p">}</span>

        <span class="kt">string</span> <span class="n">responseText</span> <span class="p">=</span> <span class="kt">string</span><span class="p">.</span><span class="n">Empty</span><span class="p">;</span>
        <span class="k">using</span> <span class="p">(</span><span class="n">HttpWebResponse</span> <span class="n">response</span> <span class="p">=</span> <span class="p">(</span><span class="n">HttpWebResponse</span><span class="p">)</span><span class="n">request</span><span class="p">.</span><span class="nf">GetResponse</span><span class="p">())</span> <span class="c1">// 보낸데이터를 기반으로 받는다</span>
        <span class="p">{</span>
            <span class="n">Stream</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">response</span><span class="p">.</span><span class="nf">GetResponseStream</span><span class="p">();</span> <span class="c1">// 받은 데이터를 스트림으로 쓴다</span>
            <span class="k">using</span> <span class="p">(</span><span class="n">StreamReader</span> <span class="n">sr</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">stream</span><span class="p">))</span> <span class="c1">// 스트림을 읽기 위해 리더를 오픈한다.</span>
            <span class="p">{</span>
                <span class="n">responseText</span> <span class="p">=</span> <span class="n">sr</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span> <span class="c1">// 스트림의 내용을 읽어서 문자열로 반환해준다.</span>
            <span class="p">}</span>

            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">responseText</span><span class="p">);</span> <span class="c1">// 내용을 로그로 출력한다.</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">catch</span> <span class="p">(</span><span class="n">Exception</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">MessageBox</span><span class="p">.</span><span class="nf">Show</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Message</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></div></div>

<p><span style="color:darkblue"><code class="language-plaintext highlighter-rouge">3.2. Result</code></span></p>

<p>Form 모양의 2.2 에서 보여준것과 똑같고 썸네일에서 차이점은 가로 세로 크기를 지정해줘서 보여줄수 있다는 거네요</p>

<p>썸네일 생성이 되면</p>

<p>{“thumbnail_image_url”: “http://k.kakaocdn.net/dn/bw6GES/btqN2eRBDdk/OnAiVHPpENVtaK9RySalK1/img.jpg”}</p>

<p>이런식으로 리턴이 와서 해당 url로 이미지를 받을수 있어요</p>

<p>썸네일 검출은</p>

<p>{“result”: {“width”: 900, “thumbnail”: {“x”: 80, “width”: 780, “height”: 780, “y”: 0}, “height”: 780}, “rid”: “cb92b77acdeb470371cefc6daa4cf203”}</p>

<p>이런식으로 옵니다 이번에 짧게 오네요</p>

<p>이렇게 url로 하는걸 해봤는데</p>

<p>curl를 써서 파일로 업로드해서 동작시키는건 잘 되는걸 보니 제 코드상에 어떤 문제가 있는건 확실한데 그게 뭔지를 아직 찾지를 못하고 있어서 혹시 도움주실분 계시면 연락 부탁드립니다 …</p>

<p>gdw0923@naver.com 으로 꼭 좀 부탁드립니다.</p>

<p>마지막으로 curl 로 동작시킨 얼굴검출 파일업로드 버전입니다.</p>

<p><img src="/assets/img/kakao/vision_3.png" alt="img" /></p>
:ET